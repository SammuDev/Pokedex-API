import Head from "next/head";
import React, { useEffect, useState } from "react";
import PokeScrow from "../styles/styledsPokedex/PokeScrow";
import PokesmonsScrow from "../styles/styledsPokedex/PokesmonsScrow";
import Logo from "../styles/styledsHome/Logo";
import Paragraphy from "../styles/styledsPokedex/Paragraphy";
import InputSearch from "../styles/styledsPokedex/InputSearch";
import PokeData from "../styles/styledsPokedex/PokeData";
import MainCustom from "../styles/styledsPokedex/MainCustom";
import Image from "next/image";
import ButtonPokemons from "../styles/styledsPokedex/ButtonPokemons";

type PokeProps = {
  id: number;
  name: string;
  url: string;
};

const Pokedex = () => {
  const [data, setData] = useState<PokeProps[]>([]);
  const [filteredPokemons, setFilteredPokemons] = useState<PokeProps[]>([]);
  const [search, setSearch] = useState('');

  const [filteredImg, setFilteredImg] = useState(`https://unpkg.com/pokeapi-sprites@2.0.2/sprites/pokemon/other/dream-world/25.svg`);
  const [onlyPokemon, setOnlyPokemon] = useState<PokeProps>();

  // ABAIXO: Requisição fething data dos Pokemons
  useEffect(() => {
    const getData = async () => {
      try {
        const maxPokemons = 500 // -> Quantidade de Pokemóns que podem ser visualizados!
        const url = 'https://pokeapi.co/api/v2/pokemon';

        const res = await fetch(`${url}/?limit=${maxPokemons}`);
        const pokemons = await res.json();
        console.log(pokemons.results);

        pokemons.results.forEach((obj: any, idx: number) => obj.id = idx + 1);

        setData(pokemons.results);
      }
      catch (e) {
        console.log(`Error: ${e}`);
      }
    };

    getData();
  }, []);

  //ABAIXO: Busca de Pokemons
  useEffect(() => {
    setFilteredPokemons(data.filter(poke => poke.name.includes(search.toLowerCase())));
  }, [data, search]);

  // ABAIXO: Pokemons alocados nos cards de acordo com o click de usuário
  const handlePokemons = (poke: any): void => {
    setFilteredImg(() => `https://unpkg.com/pokeapi-sprites@2.0.2/sprites/pokemon/other/dream-world/${poke.id}.svg`);
    setOnlyPokemon(() => poke);
    console.log(poke);
    console.log(`BOTÃO ${poke.id} FUNCIONANDO!`);
  };

  return (
    <div>
      <Head>
        <title>Dash - Pokedex</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MainCustom>
        <PokesmonsScrow>
          {/* <Link href={'/'}>Home</Link> */}
          <Logo val/>

          <Paragraphy>Everything you wanted to know about<br /> your favorite pocket monster!</Paragraphy>

          <InputSearch value={search} onChange={e => setSearch(e.target.value)}/>

          <hr />

          <PokeScrow>
            {!search && data.map(poke => (
              <ButtonPokemons key={poke.id} onClick={() => handlePokemons(poke)}>
                #{poke.id < 10 ? `00${poke.id}` : poke.id < 100 ? `0${poke.id}` : `${poke.id}`} - {poke.name}
              </ButtonPokemons>
            ))}

            {/* =========== */}

            {search && filteredPokemons.map(poke => (
              <ButtonPokemons key={poke.name} onClick={() => handlePokemons(poke)}>
                #{poke.id < 10 ? `00${poke.id}` : poke.id < 100 ? `0${poke.id}` : `${poke.id}`} - {poke.name}
              </ButtonPokemons>
            ))}
          </PokeScrow>
        </PokesmonsScrow>

        <PokeData>
          {/* <h2>ID: {onlyPokemon.id} / Name: {onlyPokemon.name}</h2> */}
          <Image
            src={filteredImg}
            width={200}
            height={200}
            alt='Pokemon'/>
        </PokeData>
      </MainCustom>
    </div>
  );
};

export default Pokedex;
