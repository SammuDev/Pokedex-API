import Head from "next/head";
import React, { useEffect, useState } from "react";
import PokeScrow from "../styles/styledsPokedex/PokeScrow";
import Link from "next/link";
import PokesmonsScrow from "../styles/styledsPokedex/PokesmonsScrow";
import Logo from "../styles/styledsHome/Logo";
import Paragraphy from "../styles/styledsPokedex/Paragraphy";
import InputSearch from "../styles/styledsPokedex/InputSearch";
import Card from "./Cards/Card";
import PokeData from "../styles/styledsPokedex/PokeData";
import MainCustom from "../styles/styledsPokedex/MainCustom";

type PokeProps = {
  id: number;
  number: string;
  url: string;
  name: string;
  image: string;
  fetchedAt: string;
  search: string;
  attacks: {
    special: Array<{
      name: string;
      type: string;
      damage: number;
    }>
  }
};

const pokedex = () => {
  const [data, setData] = useState<Array<PokeProps>>([]);
  const [search, setSearch] = useState('');
  const [filteredPokemons, setFilteredPokemons] = useState<Array<PokeProps>>([]);

  useEffect(() => {
    const getData = async () => {
      try {
        const maxPokemons = 100;
        const url = 'https://pokeapi.co/api/v2/pokemon';

        const res = await fetch(`${url}/?limit=${maxPokemons}`);
        const pokemons = await res.json();
        console.log(pokemons.results);

        pokemons.results.forEach((obj: any, idx: number) => obj.id = idx + 1);

        setData(pokemons.results);
      }
      catch (e) {
        console.log(`Error: ${e}`);
      }
    };

    getData();
  }, []);

  useEffect(() => {
    const filtering = () => {
      const filtered = search.toLowerCase();
      setFilteredPokemons((): any => {
        data.filter((poke: any) => poke.name.includes(filtered))
      });
    }
    filtering();
  }, [data, search]);

  return (
    <div>
      <Head>
        <title>Dash - Pokedex</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MainCustom>
        <PokesmonsScrow>
          <Link href={'/'}>Home</Link>
          <Logo val/>

          <Paragraphy>Everything you wanted to know about<br /> your favorite pocket monster!</Paragraphy>

          <InputSearch value={search} onChange={(e) => setSearch(e.target.value)}/>

          <hr />

          <PokeScrow>
            {search ? data.map(poke => (
              <div key={poke.id}>
                #{poke.id < 10 ? `00${poke.id}` : poke.id < 100 ? `0${poke.id}` : `${poke.id}`} - {poke.name}
              </div>
            )) : filteredPokemons.map(poke => (
              <div key={poke.name}>
                #{poke.id < 10 ? `00${poke.id}` : poke.id < 100 ? `0${poke.id}` : `${poke.id}`} - {poke.name}
              </div>
            ))}
          </PokeScrow>
        </PokesmonsScrow>

        <PokeData>
          {/* {data.map(poke => (
            <Card key={poke.id} pokemon={poke}/>
          ))} */}
        </PokeData>
      </MainCustom>
    </div>
  );
};

export default pokedex;
